library(tidyverse)
#Extracting hospital data
hospital_df_raw <- read.csv("https://data.cms.gov/provider-data/sites/default/files/resources/092256becd267d9eeccf73bf7d16c46b_1681243512/Hospital_General_Information.csv")
#Extracting income data - The dataset was large and the page crashed when I tried viewing the table on the website so it was easier to download it and upload it to github.
income_df_raw <- read.csv("https://raw.githubusercontent.com/LeJQC/MSDS/main/DATA%20606/Final%20Project/Income%20data.csv")
# Tidying the hospital data frame and selecting the columns I need
hospital_df <- hospital_df_raw %>%
select("Facility.Name","City", "State", "ZIP.Code", "Hospital.Type", "Hospital.Ownership", "Hospital.overall.rating") %>%
rename(HospitalName = Facility.Name, HospitalRating = Hospital.overall.rating, ZipCode = ZIP.Code)
# Tidying the income data frame. Looking to make a data frame with 2 columns: zip code and median income
income_df <- income_df_raw %>%
select("NAME","S1901_C01_012E") %>%
slice(-1) %>%
mutate(NAME = as.numeric(substr(NAME, nchar(NAME) - 4, nchar(NAME))),
S1901_C01_012E = as.numeric(S1901_C01_012E)) %>%
rename(ZipCode = NAME, Income = S1901_C01_012E)
# Merging both the hospital and income data frames together
merged_df <- merge(income_df, hospital_df, by ="ZipCode")
# Cleaning out the NA values
ratings_df <- merged_df %>%
filter(HospitalRating != "Not Available", Income >= 0) %>%
group_by(HospitalRating) %>%
mutate(HospitalRating = as.numeric(HospitalRating))
# Summary statistics by rating(`group1`)
stats <- psych::describeBy(ratings_df$Income, group = ratings_df$HospitalRating, mat = TRUE)
rownames(stats) <- NULL
stats <- stats %>%
select(c(group1, n, mean, sd, median, min, max, range, se)) %>%
rename("Rating" = "group1")
knitr::kable(stats)
library(ggmap)
# Creating an average hospital rating by state
avg_state <- ratings_df %>%
group_by(State) %>%
mutate(avg_rating = round(mean(HospitalRating),2)) %>%
mutate(avg_income = round(mean(Income),2))
# Using the Google Maps API
register_google(key = "AIzaSyBCuGJujBhbM3SiJMW07WCEM0YFAKvG320")
# Getting the US map from Google Maps API
us_map <- get_map(location = "united states", zoom = 4, maptype = "terrain")
# This has the lat and long of all the states
mapdata <- map_data("state")
# Create lookup table for state abbreviations
state_lookup <- tibble(State = state.abb, region = state.name)
state_lookup$region <- tolower(state_lookup$region)
# Merge lookup table with  state ratings data frame
state_ratings <- avg_state %>%
left_join(state_lookup, by = "State") %>%
full_join(mapdata, by = "region") %>%
filter(avg_rating != 0, long != 0, Income != 0)
# Plot of US and average rating
map1_rating <- ggmap(us_map) +
geom_polygon(data = state_ratings, aes(x = long, y = lat, group = group, fill = avg_rating), color = "black", linewidth = 0.5, alpha = 0.8) +
theme_void()
map2_rating <- map1_rating +
scale_fill_gradient(name = "Average Hospital Rating", low = "yellow", high = "red", na.value = "grey50")
#map2_rating
# Saving the map because it took a long time to load
#ggsave("US Hospital rating.png", map2_rating)
# Plot of US and Income
map1_income <- ggmap(us_map) +
geom_polygon(data = state_ratings, aes(x = long, y = lat, group = group, fill = avg_income), color = "black", linewidth = 0.5, alpha = 0.8)+
theme_void()
map2_income <- map1_income +
scale_fill_gradient(name = "Income", low = "lightblue", high = "blue", na.value = "grey50")
#map2_income
#ggsave("US Income.png", map2_income)
owner_table <- sort(table(ratings_df$Hospital.Ownership), decreasing = TRUE)
knitr::kable(owner_table)
# Rating based on hospital ownership
ratings_df %>%
group_by(Hospital.Ownership) %>%
ggplot(aes(x = Hospital.Ownership, y = HospitalRating)) +
coord_flip() +
geom_bar(stat = "summary", fun = "mean")+
labs(x = "Hospital Ownership", y = "Average Rating") +
theme_bw()
# Plotting the highest and lowest rated hospital
ratings_df %>%
filter(HospitalRating == c(1,5)) %>%
ggplot(aes(x = Hospital.Ownership, fill = Hospital.Type)) +
facet_wrap(~ HospitalRating)+
geom_bar()+
coord_flip()
ratings_df %>%
ggplot(aes(x = Income)) +
geom_histogram(bins = 100) +
theme_bw()
ratings_df %>%
ggplot(aes(x = HospitalRating)) +
geom_histogram() +
theme_bw()
ratings_df %>%
ggplot(aes(x = Income, y = HospitalRating, group = HospitalRating)) +
geom_boxplot() +
theme_bw()
scatter_plot <- ggplot(ratings_df, aes(x = Income, y = HospitalRating, group = 1)) +
geom_jitter() +
labs(title = "Relationship Between Hospital Quality Ratings and Income Levels",
x = "Income Levels", y = "Hospital Quality Ratings") +
geom_smooth(method = lm, se = FALSE) +
theme_bw()
scatter_plot
# Fit a linear regression model to the data
lm_model <- lm(HospitalRating ~ Income, data = ratings_df)
# Print the summary of the linear regression model
summary(lm_model)
